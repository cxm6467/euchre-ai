name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]
        include:
          - os: ubuntu-latest
            platform: linux
            build_cmd: build-linux
            artifact_pattern: "dist/*.AppImage"
            artifact_name: "linux-appimage"
          - os: windows-latest
            platform: windows
            build_cmd: build-win
            artifact_pattern: "dist/*.exe"
            artifact_name: "windows-installer"
          - os: macos-14
            platform: macos
            build_cmd: build-mac
            artifact_pattern: "dist/*.dmg"
            artifact_name: "macos-dmg"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for ${{ matrix.platform }}
        run: npm run ${{ matrix.build_cmd }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_pattern }}
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display downloaded artifacts
        run: find ./artifacts -type f -exec ls -la {} \;

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.exe
            artifacts/**/*.dmg
            artifacts/**/*.AppImage
          name: Release ${{ github.ref_name }}
          body: |
            ## ðŸŽ® Euchre Game ${{ github.ref_name }}
            
            Download the appropriate installer for your platform:
            
            - **Windows**: Download the `.exe` file
            - **macOS**: Download the `.dmg` file  
            - **Linux**: Download the `.AppImage` file
            - **Android**: Download the `.apk` file (may appear after other builds complete)
            - **iOS**: Download the `.zip` file (iOS Simulator build for development)
            
            ### Installation Instructions:
            - **Windows**: Run the installer and follow the setup wizard
            - **macOS**: Open the DMG and drag the app to Applications
            - **Linux**: Make the AppImage executable and run: `chmod +x *.AppImage && ./Euchre-*.AppImage`
            - **Android**: Enable "Install from unknown sources" and install the APK
            - **iOS**: Extract zip and drag to iOS Simulator or install via Xcode
            
            ### What's New:
            See the commit history for detailed changes in this release.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    runs-on: ubuntu-latest
    # Always run this job, but conditionally upload to release
    if: github.event_name == 'push'
    
    steps:
      - name: Debug GitHub context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub ref type: ${{ github.ref_type }}"
          echo "Is tag: ${{ github.ref_type == 'tag' }}"
          echo "Contains main: ${{ contains(github.ref, 'main') }}"
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create Android keystore
        run: |
          cd android/app
          if [ ! -z "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
            echo "Using provided keystore from secrets"
            echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android-keystore.jks
          else
            echo "Generating new debug keystore"
            keytool -genkey -v \
              -keystore android-keystore.jks \
              -alias androiddebugkey \
              -keyalg RSA \
              -keysize 2048 \
              -validity 10000 \
              -storepass android \
              -keypass android \
              -dname "CN=Android Debug, O=Android, C=US"
          fi
          
          # Verify keystore was created in the correct directory
          if [ ! -f android-keystore.jks ]; then
            echo "Error: Keystore file was not created"
            ls -la .
            pwd
            exit 1
          fi
          
          echo "Keystore created successfully in android/app/:"
          ls -la android-keystore.jks

      - name: Build Android APK
        run: |
          npx cap sync android
          cd android
          
          # Build release APK with signing configuration from build.gradle
          ./gradlew assembleRelease
            
          # Verify the APK was built
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            echo "APK built successfully"
            ls -la app/build/outputs/apk/release/
          else
            echo "Error: APK was not generated"
            find app/build/outputs -name "*.apk" || echo "No APK files found"
            exit 1
          fi

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Upload APK to Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: android/app/build/outputs/apk/release/app-release.apk
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ios:
    runs-on: macos-14
    # Always run this job, but conditionally upload to release
    if: github.event_name == 'push'
    
    steps:
      - name: Debug GitHub context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub ref type: ${{ github.ref_type }}"
          echo "Is tag: ${{ github.ref_type == 'tag' }}"
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'

      - name: Setup CocoaPods
        run: sudo gem install cocoapods

      - name: Sync Capacitor and install iOS dependencies
        run: |
          npm run cap:sync
          cd ios/App && pod install

      - name: Build iOS App (Simulator)
        run: |
          cd ios/App
          # Build for iOS Simulator (doesn't require code signing)
          xcodebuild -workspace App.xcworkspace \
                     -scheme App \
                     -configuration Release \
                     -destination 'platform=iOS Simulator,name=iPhone 15' \
                     -derivedDataPath ./build \
                     build
          
          # Create a simple zip package of the app bundle
          mkdir -p ./build/Release-iphonesimulator
          cd ./build/Build/Products/Release-iphonesimulator
          zip -r ../../../../App-iOS-Simulator.zip App.app
          cd ../../../../

      - name: Upload iOS App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: ios/App/App-iOS-Simulator.zip

      - name: Upload iOS App to Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: ios/App/App-iOS-Simulator.zip
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}