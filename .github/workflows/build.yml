name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            build_cmd: build-linux
            artifact_pattern: "dist/*.AppImage"
            artifact_name: "linux-appimage"
          - os: windows-latest
            platform: windows
            build_cmd: build-win
            artifact_pattern: "dist/*.exe"
            artifact_name: "windows-installer"
          - os: macos-latest
            platform: macos
            build_cmd: build-mac
            artifact_pattern: "dist/*.dmg"
            artifact_name: "macos-dmg"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for ${{ matrix.platform }}
        run: npm run ${{ matrix.build_cmd }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_pattern }}
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display downloaded artifacts
        run: find ./artifacts -type f -exec ls -la {} \;

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.exe
            artifacts/**/*.dmg
            artifacts/**/*.AppImage
          name: Release ${{ github.ref_name }}
          body: |
            ## ðŸŽ® Euchre Game ${{ github.ref_name }}
            
            Download the appropriate installer for your platform:
            
            - **Windows**: Download the `.exe` file
            - **macOS**: Download the `.dmg` file  
            - **Linux**: Download the `.AppImage` file
            - **Android**: Download the `.apk` file (may appear after other builds complete)
            - **iOS**: Download the `.ipa` file (requires developer certificate)
            
            ### Installation Instructions:
            - **Windows**: Run the installer and follow the setup wizard
            - **macOS**: Open the DMG and drag the app to Applications
            - **Linux**: Make the AppImage executable and run: `chmod +x *.AppImage && ./Euchre-*.AppImage`
            - **Android**: Enable "Install from unknown sources" and install the APK
            - **iOS**: Install via Xcode, TestFlight, or with developer certificate
            
            ### What's New:
            See the commit history for detailed changes in this release.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    runs-on: ubuntu-latest
    # Always run this job, but conditionally upload to release
    if: github.event_name == 'push'
    
    steps:
      - name: Debug GitHub context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub ref type: ${{ github.ref_type }}"
          echo "Is tag: ${{ github.ref_type == 'tag' }}"
          echo "Contains main: ${{ contains(github.ref, 'main') }}"
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create Android keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android-keystore.jks || keytool -genkey -v -keystore android-keystore.jks -alias euchre-key -keyalg RSA -keysize 2048 -validity 10000 -storepass android -keypass android -dname "CN=Euchre Game, OU=Game Dev, O=Euchre, L=City, S=State, C=US"

      - name: Build Android APK
        run: |
          npx cap sync android
          cd android
          ./gradlew assembleRelease -Pandroid.injected.signing.store.file=../android-keystore.jks -Pandroid.injected.signing.store.password=android -Pandroid.injected.signing.key.alias=euchre-key -Pandroid.injected.signing.key.password=android

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Upload APK to Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: android/app/build/outputs/apk/release/app-release.apk
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ios:
    runs-on: macos-latest
    # Always run this job, but conditionally upload to release
    if: github.event_name == 'push'
    
    steps:
      - name: Debug GitHub context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub ref type: ${{ github.ref_type }}"
          echo "Is tag: ${{ github.ref_type == 'tag' }}"
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'

      - name: Setup CocoaPods
        run: sudo gem install cocoapods

      - name: Sync Capacitor and install iOS dependencies
        run: |
          npm run cap:sync
          cd ios/App && pod install

      - name: Build iOS App
        run: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace \
                     -scheme App \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath ./build/App.xcarchive \
                     archive
          
          # Export IPA
          xcodebuild -exportArchive \
                     -archivePath ./build/App.xcarchive \
                     -exportPath ./build \
                     -exportOptionsPlist ../../exportOptions.plist

      - name: Upload iOS IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ios/App/build/*.ipa

      - name: Upload IPA to Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: ios/App/build/*.ipa
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}